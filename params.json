{"name":"Ampliar - DS3231 Library","tagline":"Arduino library for DS3231 Real Time Clock (RTC)","body":"# DS3231\r\n\r\nArduino library for DS3231 Real Time Clock (RTC).\r\n\r\nThis project is a comprehensive library for [Arduino](http://arduino.cc) to interface with\r\n[Maxim DS3231](https://www.maximintegrated.com/en/products/digital/real-time-clocks/DS3231.html) real-time clock.\r\n\r\n## About DS3231\r\n\r\nDS3231 is a low-cost, extremely accurate I2C real-time clock (RTC) with an integrated temperature-compensated\r\ncrystal oscillator (TCXO) and crystal. The device incorporates a battery input, and maintains accurate timekeeping when\r\nmain power to the device is interrupted.\r\n\r\nFor more details, please referrer the product [datasheet](https://datasheets.maximintegrated.com/en/ds/DS3231.pdf).\r\n\r\n## Library Features\r\n\r\n* Read and write date/time information.\r\n* Read the temperature and force the temperature update.\r\n* Full control of both alarms supported by DS3231:\r\n    * enable/disable the alarms;\r\n    * enable/disable hardware interruption when the alarm is triggered;\r\n    * setup the alarm 1 to trigger:\r\n        * once per second;\r\n        * when seconds match;\r\n        * when minutes and seconds match;\r\n        * when hours, minutes, and seconds match;\r\n        * when date, hours, minutes, and seconds match;\r\n        * when day, hours, minutes, and seconds match;\r\n    * setup the alarm 2 to trigger:\r\n        * once per minute (00 seconds of every minute);\r\n        * when minutes match;\r\n        * when hours and minutes match;\r\n        * when date, hours, and minutes match;\r\n        * when day, hours, and minutes match.\r\n* Full control of DS3231 functionalities:\r\n    * enable/disable the battery-backed mode;\r\n    * enable/disable an output of a 32.768 kHz square-wave signal on the correspondent pin of DS3231;\r\n    * enable/disable the square-wave output at a given frequency;\r\n    * enable/disable the battery-backed square-wave output;\r\n    * calibration by setting the aging offset register.\r\n\r\nBonus:\r\n\r\n* Heavily documented using [Doxygen](http://www.doxygen.org/) syntax.\r\n* Reader friendly library. There is no black-magic difficult-to-understand piece of code. There are plenty of comments\r\n  and the methods and variables names are very descriptives.\r\n* Library divided in many classes (OOP friendly). You are not obliged to include everything. Pick up only what you\r\n  need.\r\n* Everything inside namespaces. It does not pollute the global namespace and avoid naming conflicts.\r\n\r\n## Where to Buy?\r\n\r\n**USA**\r\n* [Adafruit] (https://www.adafruit.com/product/255)\r\n\r\n**Brazil**\r\n* [FILIPEFLOP] (http://www.filipeflop.com/pd-1c7dbf-real-time-clock-rtc-ds3231.html)\r\n\r\n## Documentation\r\n\r\nAll cpp files are heavily documented. If you prefer, you can generate the documentation using Doxygen. You just need to\r\nrun doxygen in the library's folder.\r\n\r\n## How to Contribute?\r\n\r\nDo you want to help? Great! There are some ways to contribute:\r\n\r\n* **Report a bug** - If you find a bug, please use the [Issues](https://github.com/dboatto/DS3231/issues) page;\r\n* **Fix a bug** - Better than reporting a bug is to fix it! Just fork the project, fix the bug and send me a pull\r\n  request.\r\n* **Grammar and spell check** - It is nice to have a well written documentation, don't you? Please contact me if you\r\n  find any error or strange English expression. You may use the [Issues](https://github.com/dboatto/DS3231/issues)\r\n  page.\r\n\r\n## Example\r\n\r\nYou can find more examples on examples folder. When you install this library, the Arduino IDE will make them available\r\nthrough the menu File/Examples/Ampliar DS3231.\r\n\r\n~~~~~~~~~~~~~~~{.cpp}\r\n/**\r\n * This example shows how to read and write date/time on DS3231 through\r\n * this library. Additionally, since DS3231 is able to measure the\r\n * temperature, this library provides a method to read it.\r\n *\r\n * Wiring for Arduino Uno (for other boards, check the Wire\r\n * Library documentation to figure out the SDA and SCL pins\r\n * on Arduino):\r\n *\r\n * +---------+--------+\r\n * | Arduino | DS3231 |\r\n * +---------+--------+\r\n * | A4      | SDA    |\r\n * | A5      | SCL    |\r\n * | GND     | GND    |\r\n * | 5V      | VCC    |\r\n * +---------+--------+\r\n *\r\n * More information: https://github.com/dboatto/DS3231\r\n *\r\n * In order to use this example, open the Serial Monitor on\r\n * Arduino IDE (Ctrl+Shit+M).\r\n */\r\n#include <Arduino.h>\r\n#include \"RealTimeClock.h\"\r\n\r\n//All library classes are inside namespaces.\r\n//Therefore, use the following statement to import them.\r\nusing namespace Ampliar::DS3231;\r\n\r\n//This statement creates an instance of RealTimeClock, used to access DS3231\r\n//basic date/time and temperature functionalities.\r\nRealTimeClock clock;\r\n\r\n//We gonna show the days of the week in the loop() function.\r\nString days[] = { \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\",\r\n                  \"Thursday\", \"Friday\", \"Saturday\" };\r\n\r\nvoid setup()\r\n{\r\n    Serial.begin(9600);\r\n\r\n    // Writes the date/time on DS3231 internal memory.\r\n    // Usage: writeDateTime(year, month, day, hour, minute, second);\r\n    clock.writeDateTime(2015, 12, 27, 16, 28, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    //Reads the date/time information from DS3231\r\n    clock.readDateTime();\r\n\r\n    Serial.print(clock.getDay());\r\n    Serial.print(\"/\");\r\n    Serial.print(clock.getMonth());\r\n    Serial.print(\"/\");\r\n    Serial.print(clock.getYear());\r\n    Serial.print(\" \");\r\n    Serial.print(clock.getHour());\r\n    Serial.print(\":\");\r\n    Serial.print(clock.getMinute());\r\n    Serial.print(\":\");\r\n    Serial.print(clock.getSecond());\r\n    Serial.print(\" \");\r\n    Serial.print(days[clock.getDayOfWeek() - 1]);\r\n    Serial.print(\" \");\r\n    Serial.print(clock.readTemperature());\r\n    Serial.print(\" C\");\r\n    Serial.println(\"\");\r\n\r\n    delay (1000); //delays 1 (one) second\r\n}\r\n~~~~~~~~~~~~~~~\r\n\r\n## License\r\n\r\nThis library is licensed under the Apache License, Version 2.0. Check the LICENSE file for more details.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}